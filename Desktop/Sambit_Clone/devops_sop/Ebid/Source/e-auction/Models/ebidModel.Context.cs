//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace e_auction.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BidMethodMaster> BidMethodMasters { get; set; }
        public virtual DbSet<Bid> Bids { get; set; }
        public virtual DbSet<CategoryMaster> CategoryMasters { get; set; }
        public virtual DbSet<company> companies { get; set; }
        public virtual DbSet<CurrencyMaster> CurrencyMasters { get; set; }
        public virtual DbSet<ItemTypeMaster> ItemTypeMasters { get; set; }
        public virtual DbSet<MinPeriod> MinPeriods { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<RegisterMaster> RegisterMasters { get; set; }
        public virtual DbSet<Rolemaster> Rolemasters { get; set; }
        public virtual DbSet<StateMaster> StateMasters { get; set; }
        public virtual DbSet<StatusMaster> StatusMasters { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<TenderItem> TenderItems { get; set; }
        public virtual DbSet<Tracking> Trackings { get; set; }
        public virtual DbSet<UOMMaster> UOMMasters { get; set; }
        public virtual DbSet<get_v_tender_date> get_v_tender_date { get; set; }
        public virtual DbSet<v_bidmin_record> v_bidmin_record { get; set; }
        public virtual DbSet<addmintracking> addmintrackings { get; set; }
        public virtual DbSet<Tender> Tenders { get; set; }
        public virtual DbSet<LoginMaster> LoginMasters { get; set; }
        public virtual DbSet<tenderInvoice> tenderInvoices { get; set; }
    
        public virtual ObjectResult<Nullable<int>> checklogin(Nullable<int> clientid, string password)
        {
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checklogin", clientidParameter, passwordParameter);
        }
    
        public virtual int del_supplier(Nullable<int> companyid, Nullable<int> tenderid)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_supplier", companyidParameter, tenderidParameter);
        }
    
        public virtual ObjectResult<get_company_Result> get_company(string text, Nullable<int> tenderid)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_company_Result>("get_company", textParameter, tenderidParameter);
        }
    
        public virtual ObjectResult<get_supplierlist_Result> get_supplierlist(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_supplierlist_Result>("get_supplierlist", tenderidParameter);
        }
    
        public virtual ObjectResult<getitemslist_Result> getitemslist(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getitemslist_Result>("getitemslist", tenderidParameter);
        }
    
        public virtual int Register(Nullable<int> category, string role, string company, string address, string city, Nullable<int> state, Nullable<int> pincode, string pan, string person, string email, string mobile, string telephone, string tin)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var panParameter = pan != null ?
                new ObjectParameter("pan", pan) :
                new ObjectParameter("pan", typeof(string));
    
            var personParameter = person != null ?
                new ObjectParameter("Person", person) :
                new ObjectParameter("Person", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var tinParameter = tin != null ?
                new ObjectParameter("tin", tin) :
                new ObjectParameter("tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Register", categoryParameter, roleParameter, companyParameter, addressParameter, cityParameter, stateParameter, pincodeParameter, panParameter, personParameter, emailParameter, mobileParameter, telephoneParameter, tinParameter);
        }
    
        public virtual int save_item(Nullable<int> itemid, Nullable<int> tenderid, Nullable<int> itemtype, string itemname, string desc, Nullable<int> category, string location, Nullable<int> quantity, Nullable<int> uOM, Nullable<int> price, Nullable<int> currency, Nullable<int> method, Nullable<int> reduce, string remarks)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var itemtypeParameter = itemtype.HasValue ?
                new ObjectParameter("itemtype", itemtype) :
                new ObjectParameter("itemtype", typeof(int));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("itemname", itemname) :
                new ObjectParameter("itemname", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var uOMParameter = uOM.HasValue ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(int));
    
            var methodParameter = method.HasValue ?
                new ObjectParameter("method", method) :
                new ObjectParameter("method", typeof(int));
    
            var reduceParameter = reduce.HasValue ?
                new ObjectParameter("reduce", reduce) :
                new ObjectParameter("reduce", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("save_item", itemidParameter, tenderidParameter, itemtypeParameter, itemnameParameter, descParameter, categoryParameter, locationParameter, quantityParameter, uOMParameter, priceParameter, currencyParameter, methodParameter, reduceParameter, remarksParameter);
        }
    
        public virtual int save_supplier(Nullable<int> companyid, Nullable<int> tenderid, string guid)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("save_supplier", companyidParameter, tenderidParameter, guidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> save_tender(Nullable<int> tenderid, Nullable<int> clientId, string tenderDesc, string filename, Nullable<System.DateTime> startdate, string startTime, Nullable<int> timePeriodId, Nullable<int> company, Nullable<int> status, string wF)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("Tenderid", tenderid) :
                new ObjectParameter("Tenderid", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var tenderDescParameter = tenderDesc != null ?
                new ObjectParameter("TenderDesc", tenderDesc) :
                new ObjectParameter("TenderDesc", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var timePeriodIdParameter = timePeriodId.HasValue ?
                new ObjectParameter("TimePeriodId", timePeriodId) :
                new ObjectParameter("TimePeriodId", typeof(int));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var wFParameter = wF != null ?
                new ObjectParameter("WF", wF) :
                new ObjectParameter("WF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("save_tender", tenderidParameter, clientIdParameter, tenderDescParameter, filenameParameter, startdateParameter, startTimeParameter, timePeriodIdParameter, companyParameter, statusParameter, wFParameter);
        }
    
        public virtual ObjectResult<get_live_auction_Result> get_live_auction(Nullable<int> client, string status)
        {
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_live_auction_Result>("get_live_auction", clientParameter, statusParameter);
        }
    
        public virtual ObjectResult<get_tender_detail_Result> get_tender_detail(Nullable<int> tender, Nullable<int> client)
        {
            var tenderParameter = tender.HasValue ?
                new ObjectParameter("tender", tender) :
                new ObjectParameter("tender", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_tender_detail_Result>("get_tender_detail", tenderParameter, clientParameter);
        }
    
        public virtual ObjectResult<get_item_detail_Result> get_item_detail(Nullable<int> tenderid, Nullable<int> client)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_item_detail_Result>("get_item_detail", tenderidParameter, clientParameter);
        }
    
        public virtual ObjectResult<get_Bid_detail_Result> get_Bid_detail(Nullable<int> tenderid, Nullable<int> client)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Bid_detail_Result>("get_Bid_detail", tenderidParameter, clientParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Bid(Nullable<int> itemid, Nullable<int> client, Nullable<int> price, string ip, Nullable<int> bidunit)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var bidunitParameter = bidunit.HasValue ?
                new ObjectParameter("bidunit", bidunit) :
                new ObjectParameter("bidunit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Bid", itemidParameter, clientParameter, priceParameter, ipParameter, bidunitParameter);
        }
    
        public virtual ObjectResult<get_ReduceBidPrice_Result> get_ReduceBidPrice(Nullable<int> itemid, Nullable<int> price, Nullable<int> bidunit)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var bidunitParameter = bidunit.HasValue ?
                new ObjectParameter("bidunit", bidunit) :
                new ObjectParameter("bidunit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_ReduceBidPrice_Result>("get_ReduceBidPrice", itemidParameter, priceParameter, bidunitParameter);
        }
    
        public virtual int Delete_Item(Nullable<int> itemid)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Item", itemidParameter);
        }
    
        public virtual ObjectResult<get_role1_Result> get_role(Nullable<int> client)
        {
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_role1_Result>("get_role", clientParameter);
        }
    
        public virtual int file_upload(string file, Nullable<int> tenderid)
        {
            var fileParameter = file != null ?
                new ObjectParameter("file", file) :
                new ObjectParameter("file", typeof(string));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("file_upload", fileParameter, tenderidParameter);
        }
    
        public virtual int Tender_approve(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Tender_approve", tenderidParameter);
        }
    
        public virtual int add_min(Nullable<int> tenderid, Nullable<int> min, Nullable<int> clientid, string ipAddress)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_min", tenderidParameter, minParameter, clientidParameter, ipAddressParameter);
        }
    
        public virtual int Add_notify(Nullable<int> tenderid, Nullable<int> client, string text)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_notify", tenderidParameter, clientParameter, textParameter);
        }
    
        public virtual ObjectResult<get_notify_Result> get_notify(Nullable<int> tenderid, Nullable<int> client)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_notify_Result>("get_notify", tenderidParameter, clientParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> check_tendertime(Nullable<int> itemid, Nullable<int> client)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("check_tendertime", itemidParameter, clientParameter);
        }
    
        public virtual ObjectResult<Get_AddedSupplier_Result> Get_AddedSupplier(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_AddedSupplier_Result>("Get_AddedSupplier", tenderidParameter);
        }
    
        public virtual int update_tenderStatus(Nullable<int> tenderid, string status, Nullable<int> clientid, string remarks)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_tenderStatus", tenderidParameter, statusParameter, clientidParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> check_SupplierAcceptance(Nullable<int> tenderid, Nullable<int> clientid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("check_SupplierAcceptance", tenderidParameter, clientidParameter);
        }
    
        public virtual int update_SupplierAcceptance(Nullable<int> tenderid, string status, Nullable<int> clientid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_SupplierAcceptance", tenderidParameter, statusParameter, clientidParameter);
        }
    
        public virtual ObjectResult<ValidateGUID_Result> ValidateGUID(string guid)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateGUID_Result>("ValidateGUID", guidParameter);
        }
    
        public virtual ObjectResult<get_role1_Result> get_role1(Nullable<int> client)
        {
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_role1_Result>("get_role1", clientParameter);
        }
    
        public virtual int updateTracking(Nullable<int> tenderid, Nullable<int> client, string status, string remarks)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateTracking", tenderidParameter, clientParameter, statusParameter, remarksParameter);
        }
    
        public virtual int update_tenderStatus1(Nullable<int> tenderid, string status, Nullable<int> clientid, string remarks)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_tenderStatus1", tenderidParameter, statusParameter, clientidParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Save_Bid(Nullable<int> itemid, Nullable<int> client, Nullable<int> price)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Save_Bid", itemidParameter, clientParameter, priceParameter);
        }
    
        public virtual ObjectResult<get_Tracking_Result> get_Tracking(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Tracking_Result>("get_Tracking", tenderidParameter);
        }
    
        public virtual ObjectResult<get_Bid_detail1_Result> get_Bid_detail1(Nullable<int> tenderid, Nullable<int> client)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Bid_detail1_Result>("get_Bid_detail1", tenderidParameter, clientParameter);
        }
    
        public virtual ObjectResult<tenderitemreport_Result> tenderitemreport(Nullable<int> itemid)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tenderitemreport_Result>("tenderitemreport", itemidParameter);
        }
    
        public virtual int tenderitemreport_biddetail(Nullable<int> itemid, ObjectParameter tableHTML)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tenderitemreport_biddetail", itemidParameter, tableHTML);
        }
    
        public virtual int tenderitemreport_headerdetail(Nullable<int> itemid, ObjectParameter tableHTML)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tenderitemreport_headerdetail", itemidParameter, tableHTML);
        }
    
        public virtual ObjectResult<string> tenderitemreport_print(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tenderitemreport_print", tenderidParameter);
        }
    
        public virtual ObjectResult<getemail_Result> getemail(Nullable<int> client)
        {
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getemail_Result>("getemail", clientParameter);
        }
    
        public virtual ObjectResult<string> ChangePassword(Nullable<int> clientid, string pASSWORD, Nullable<int> defaultPass)
        {
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var defaultPassParameter = defaultPass.HasValue ?
                new ObjectParameter("DefaultPass", defaultPass) :
                new ObjectParameter("DefaultPass", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ChangePassword", clientidParameter, pASSWORDParameter, defaultPassParameter);
        }
    
        public virtual ObjectResult<string> sendPasswordMail(Nullable<int> clientid, string password, string flag, string profile_name)
        {
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("Clientid", clientid) :
                new ObjectParameter("Clientid", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var profile_nameParameter = profile_name != null ?
                new ObjectParameter("profile_name", profile_name) :
                new ObjectParameter("profile_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sendPasswordMail", clientidParameter, passwordParameter, flagParameter, profile_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkdefault(Nullable<int> clientid)
        {
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkdefault", clientidParameter);
        }
    
        public virtual ObjectResult<getsuppstatus_Result> getsuppstatus(Nullable<int> tenderid, Nullable<int> clientid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getsuppstatus_Result>("getsuppstatus", tenderidParameter, clientidParameter);
        }
    
        public virtual ObjectResult<getsuppstatus1_Result> getsuppstatus1(Nullable<int> tenderid, Nullable<int> clientid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getsuppstatus1_Result>("getsuppstatus1", tenderidParameter, clientidParameter);
        }
    
        public virtual int resettender(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("resettender", tenderidParameter);
        }
    
        public virtual int Save_Bid1(Nullable<int> itemid, Nullable<int> client, Nullable<int> price)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Save_Bid1", itemidParameter, clientParameter, priceParameter);
        }
    
        public virtual ObjectResult<string> GetTerms(Nullable<int> tenderid)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTerms", tenderidParameter);
        }
    
        public virtual int AddTerms(Nullable<int> tenderid, string terms)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var termsParameter = terms != null ?
                new ObjectParameter("terms", terms) :
                new ObjectParameter("terms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTerms", tenderidParameter, termsParameter);
        }
    
        public virtual ObjectResult<get_item_detail_backup_Result> get_item_detail_backup(Nullable<int> tenderid, Nullable<int> client)
        {
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_item_detail_backup_Result>("get_item_detail_backup", tenderidParameter, clientParameter);
        }
    
        public virtual ObjectResult<getpopendinglist_Result> getpopendinglist(Nullable<int> status, string usertype)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getpopendinglist_Result>("getpopendinglist", statusParameter, usertypeParameter);
        }
    
        public virtual int UpdatePO(string pO, Nullable<System.DateTime> pODate, string vendor, Nullable<int> clientid, Nullable<int> tenderid)
        {
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pODateParameter = pODate.HasValue ?
                new ObjectParameter("PODate", pODate) :
                new ObjectParameter("PODate", typeof(System.DateTime));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePO", pOParameter, pODateParameter, vendorParameter, clientidParameter, tenderidParameter);
        }
    
        public virtual int UpdateInvoice(string invoiceNo, Nullable<System.DateTime> invoiceDate, Nullable<int> clientid, Nullable<int> tenderid)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            var tenderidParameter = tenderid.HasValue ?
                new ObjectParameter("tenderid", tenderid) :
                new ObjectParameter("tenderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInvoice", invoiceNoParameter, invoiceDateParameter, clientidParameter, tenderidParameter);
        }
    }
}
